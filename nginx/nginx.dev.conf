

worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # Define the 'upstream' for the frontend dev server
    upstream frontend_dev {
        server mock-frontend:5178; # The service name and a port it exposes INTERNALLY
    }

    # Define the 'upstream' for the backend dev server
    upstream backend_dev {
        server mock-backend:8000; # The service name and the port it exposes INTERNALLY
    }

    server {
        listen 80; # Nginx listens on port 80 inside its container

        # Route API calls to the backend
        location /api {
            proxy_pass http://backend_dev; # Forward to the backend upstream
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Route all other traffic to the frontend
        location / {
            proxy_pass http://frontend_dev; # Forward to the frontend upstream
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            # These headers are crucial for WebSocket connections used by dev servers for hot-reloading
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
        }
    }
}